(window.webpackJsonp=window.webpackJsonp||[]).push([[48],{452:function(e,t,n){"use strict";n.r(t);var o=n(10),i=Object(o.a)({},(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("p",[e._v("需要完成的工作：")]),e._v(" "),n("ul",[n("li",[e._v("[x] 2022.11.15 完成引言前两段")]),e._v(" "),n("li",[e._v("[x] 2022.11.16 完成除了Fit-RNN、摘要以外的部分")]),e._v(" "),n("li",[e._v("[x] 2022.11.17 完成Fit-RNN、摘要")]),e._v(" "),n("li",[e._v("[x] 2022.11.18 完成细节修改")]),e._v(" "),n("li",[e._v("[x] 2022.11.19 完成翻译")]),e._v(" "),n("li",[e._v("[x] 2022.11.20 完成PPT、准备5个问题")]),e._v(" "),n("li",[e._v("[x] 2022.11.21 写文稿，D-day！")])]),e._v(" "),n("table",[n("thead",[n("tr",[n("th",[e._v("Page")]),e._v(" "),n("th",[e._v("Manuscript")])])]),e._v(" "),n("tbody",[n("tr",[n("td",[e._v("1")]),e._v(" "),n("td",[e._v("Thank you, Mr. chairman."),n("br"),e._v("Today, I will introduce our recent work on text-independent speaker recognition using folded-in-time neural network.")])]),e._v(" "),n("tr",[n("td",[e._v("2")]),e._v(" "),n("td",[e._v("The outline of my talk as follows. "),n("br"),e._v("In the first part, I will introduce what is speaker recognition and why we use folded-in-time neural network. "),n("br"),e._v("Next, I will show how to "),n("strong",[e._v("derive")]),e._v("[dɪˈraɪv] a feed-forward network from a delay "),n("strong",[e._v("differential")]),e._v("[ˌdɪfəˈrenʃ(ə)l] equation with modulated feedback terms."),n("br"),e._v("In the third part, slight modification is made to extend the folded-in-time concept to "),n("strong",[e._v("recurrent")]),e._v("[rɪˈkʌrənt] neural networks."),n("br"),e._v("Then, experiments are conducted on the open audio dataset TIMIT, and the results will be analyzed in this part."),n("br"),e._v("Finally, I will give a brief summary of the talk.")])]),e._v(" "),n("tr",[n("td",[e._v("3")]),e._v(" "),n("td",[e._v("As one of the "),n("strong",[e._v("pattern")]),e._v("[ˈpætə(r)n] recognition tasks, speaker recognition identifies persons from their voice. And it can be classified as text-dependent and text-independent ones."),n("br"),e._v("As the name implies, in text-independent speaker recognition, the text "),n("strong",[e._v("content")]),e._v("['kɒntent] is random and changeable. "),n("br"),e._v("So, it's more "),n("strong",[e._v("robust")]),e._v("[rəʊˈbʌst] to attacks like recording replay and speech "),n("strong",[e._v("synthesis")]),e._v("['sɪnθəsɪs]. Of course, more challenging. "),n("br"),e._v("In our work, we focus on the close-set recognition. All speakers have occurred in training "),n("strong",[e._v("phase")]),e._v("[feɪz]."),n("br"),e._v("As we said in the last talk, it follows the basic flow in deep learning training process. "),n("br"),e._v("【x】That is, feature extraction, signal forward propagation, loss calculating, error back-propagation, and "),n("strong",[e._v("gradient")]),e._v("['ɡreɪdiənt] and "),n("strong",[e._v("parameter")]),e._v("[pəˈræmɪtə(r)] update.")])]),e._v(" "),n("tr",[n("td",[e._v("4")]),e._v(" "),n("td",[e._v("【x】In recent years, deep learning and neural networks have made rapid progress in pattern recognition, including speaker recognition."),n("br"),e._v("As we all know, unlike image signals, the audio signals have "),n("strong",[e._v("temporal")]),e._v("['temp(ə)rəl] information. So, different network structures have their unique ways to add them into the network."),n("br"),e._v("Feedforward neural networks process discrete frame-level speech features directly, or stack nearby frames as one-dimension input."),n("br"),e._v("The time-delay neural network merges the left and right speech frames layer by layer."),n("br"),e._v("Recurrent neural networks incorporate temporal information in the network structure.")])]),e._v(" "),n("tr",[n("td",[e._v("5")]),e._v(" "),n("td",[e._v("In this picture, LSTM is a "),n("strong",[e._v("variant")]),e._v("[ˈveəriənt] of RNN. We can see that, it considers not only the input at the current moment, but also the state of the hidden nodes at the previous moment. So, this makes the network have memory "),n("strong",[e._v("capability")]),e._v("[keɪpə'bɪləti].")])]),e._v(" "),n("tr",[n("td",[e._v("6")]),e._v(" "),n("td",[e._v("Currently, the Graphics Processing unit (GPU) is the mainstream platform for deep neural networks. Since it's particularly suitable for parallel computing."),n("br"),e._v("But, GPU is a von Neumann structure. This means its computational module and storage unit are separated."),n("br"),e._v("Frequent IO operations make its energy efficiency and processing speed drop."),n("br"),e._v("So, more researchers focus on alternative hardware platforms based on non-Von Neumann structures, such as photonic neural networks."),n("br"),e._v("Currently, three typical structures have been realized. They are feedforward neural networks, reservoir computing, and spiking neural networks."),n("br"),e._v("In this picture, a feedforward neural network is constructed based on light "),n("strong",[e._v("diffraction")]),e._v("[dɪ'frækʃ(ə)n]."),n("br"),e._v("However, some optical devices are unstable and difficult to fine tune. So,  it's difficult to realize large-scale network topologies."),n("br"),e._v("Therefore, how to complete the network construction with fewer components has become one of the important challenges.")])]),e._v(" "),n("tr",[n("td",[e._v("7")]),e._v(" "),n("td",[e._v("In 2011, the proposal of dynamic "),n("strong",[e._v("reservoir")]),e._v("[ˈrezə(r)ˌvwɑː(r)] computing introduce the delay-dynamical system to the neural network. "),n("br"),e._v("It uses one nonlinear neuron and one delay loop to realize reservoir computing. Reservoir computing is very similar to recurrent neural network. But the input and hidden weights of reservoir computing is fixed. "),n("br"),e._v("As shown in the picture, with time-"),n("strong",[e._v("multiplexing")]),e._v("['mʌltɪpleksɪŋ], the signals are "),n("strong",[e._v("serialized")]),e._v("[ˈsɪəriəlaɪz] and fed into a single neuron. And then, returned to the neuron via a delay loop."),n("br"),e._v("This allows the system to respond to the input signal over a long "),n("strong",[e._v("period")]),e._v("[ˈpɪəriəd] of time. So, it's usually used in speech recognition and chaotic time sequence prediction."),n("br"),e._v("The picture in the lower right corner shows its hardware implementation."),n("br"),e._v("With such space-time alternations, delay-dynamical system can also unfold neurons into "),n("strong",[e._v("arbitrary")]),e._v("[ˈɑː(r)bɪtrəri] "),n("strong",[e._v("topologies")]),e._v("[təˈpɒlədʒi]."),n("br"),e._v("However, similar to dynamic reservoir computing, the connection weights between virtual nodes are fixed. So, the learning and expressive ability of the network is limited.")])]),e._v(" "),n("tr",[n("td",[e._v("8")]),e._v(" "),n("td",[e._v("To eliminate this limitation, folded-in-time DNN adds feedback modulation on the delay loop. "),n("br"),e._v("When fold a  feedforward network into a neuron and multiple delay loops, the nodes within a layer cannot compute in parallel."),n("br"),e._v("So, folded-in-time DNN simulate each node in the hidden layer in turn."),n("br"),e._v("The picture in the upper left corner shows the composition of the system. The driving signal of the neuron receives the signals from input signal, and modulation signals. The node state is achieved using a nonlinear function on the driving signal, such as the sin function. The length of the delay loops determine the connection direction between nodes."),n("br"),e._v("We can see the picture on the right, the distance between virtual nodes is theta, and T is the time needed to calculate the node state in one hidden layer. The blue lines indicate that the delay of loop is less than T. And the orange ones mean that the delay of loop is larger than T.")])]),e._v(" "),n("tr",[n("td",[e._v("9")]),e._v(" "),n("td",[e._v("Since we apply it to the speaker recognition, in the following presentation, I will introduce it from the perspective of audio signal processing."),n("br"),e._v("The speech feature MFCC is extracted, and multiply it with random input weight. "),n("br"),e._v("The input signal will be normalized in zero to one, and it should maintain constant in the interval theta."),n("br"),e._v("Then, the signal is feed into the delay-dynamical system. Solve the delay differential equation to get the node state."),n("br"),e._v("It is worth noting that, the non-zero values of hidden weight matrix are in the diagonal direction."),n("br"),e._v("The processing of output layer is the same as traditional method.")])]),e._v(" "),n("tr",[n("td",[e._v("10")]),e._v(" "),n("td",[e._v("The feedback module on the delay loop act as weights between nodes."),n("br"),e._v("Same as DNN, folded-in-time DNN use "),n("strong",[e._v("stochastic")]),e._v("[stə'kæstɪk] "),n("strong",[e._v("gradient")]),e._v("['ɡreɪdiənt] "),n("strong",[e._v("descent")]),e._v("[dɪ'sent] to update the training parameters."),n("br"),e._v("Since the coupling between nearby nodes, the chain rule need to be modified."),n("br"),e._v("In short, the error is passed back node by node. Except for the last hidden layer, the gradient of the current node state come from the gradient on the node state in the next layer and the gradient on the driving signal in the next interval.")])]),e._v(" "),n("tr",[n("td",[e._v("11")]),e._v(" "),n("td",[e._v("The parameter settings for error back propagation are shown in this page.")])]),e._v(" "),n("tr",[n("td",[e._v("12")]),e._v(" "),n("td",[e._v("We also extend the folding concept to the recurrent neural network. "),n("br"),e._v("We can see from the picture. Take a single-layer RNN as an example, the connection of nearby time steps is equivalent to the connection of inter-layers in DNN."),n("br"),e._v("The delay loops connect nodes from different time step."),n("br"),e._v("The model parameters are shared in all time steps."),n("br"),e._v("Different from Folded-in-time DNN, It allows for the information input in all intervals. And, the modulation functions must be T-"),n("strong",[e._v("periodic")]),e._v("[ˌpɪəriˈɒdɪk].")])]),e._v(" "),n("tr",[n("td",[e._v("13")]),e._v(" "),n("td",[e._v("We simulate the speaker recognition task on the open dataset TIMIT."),n("br"),e._v("Ten speakers are selected, 5 men and 5 women."),n("br"),e._v("For a fair comparison, the input sample of all the networks are grouped by 30 frames sequentially, as a bin."),n("br"),e._v("For RNN-based network, the frames in one bin are fed into the network by time step."),n("br"),e._v("For DNN-based network, the statistics are calculated for each bin.")])]),e._v(" "),n("tr",[n("td",[e._v("14")]),e._v(" "),n("td",[e._v("The impact of two important parameters are explored, that is the virtual node distance theta and the number of delay loops."),n("br"),e._v("As theta increases, the network's update speed increases, the recognition accuracy gradually rises until it becomes flat, and the best result is obtained with fewer iterations."),n("br"),e._v("When theta is above zero point five, the system responds adequately to the input signal. The recognition accuracy gradually surpasses DNN as theta increases."),n("br"),e._v("When theta is below four, coupling between adjacent nodes is an important part of the gradient update. This makes the errors are passed in the correct direction."),n("br"),e._v("However, with the increase of theta, the local connection become unnecessary. So, adjusting theta can achieve a balance between computation time and the length of delay loops.")])]),e._v(" "),n("tr",[n("td",[e._v("15")]),e._v(" "),n("td",[e._v("Then, we select different length of loops by Gaussian sampling."),n("br"),e._v("The results in this table show that, the increase in the number of delay loops does not lead to a significant improvement in the recognition accuracy."),n("br"),e._v("So, sparsity connection is advocated. With only 10 loops, the accuracy is only slightly decreased."),n("br"),e._v("But deleting one loop will delete all the value in the diagonal direction on the weight matrix. So, how to find a better sparse form is one of the problems to be solved."),n("br"),e._v("Now, we have found the suitable value of virtual node distance and delay loops for the later experiments.")])]),e._v(" "),n("tr",[n("td",[e._v("16")]),e._v(" "),n("td",[e._v("In this part, we examine the applicability of Folded-in-time DNN on speaker recognition, including the accuracy and confidence of the predictions."),n("br"),e._v("The confusion matrix above shows the distribution of the number of all speech bins in the predicted labels for each speaker. "),n("br"),e._v("The false predictions occur mostly within the same gender but rarely between the genders."),n("br"),e._v("We also calculates the margin between the best guess and the closest competitor to further examine the confidence of the decision. "),n("br"),e._v("The picture below indicates that women are more difficult to identify than men in same-gender recognition."),n("br"),e._v("These results are consistent with the expected result for speaker recognition.")])]),e._v(" "),n("tr",[n("td",[e._v("17")]),e._v(" "),n("td",[e._v("In the last part, we examine the performance of folded-in-time RNN."),n("br"),e._v("The one-layer RNN has the same model parameters as the two-layer equal-width DNN."),n("br"),e._v("The table shows the bin accuracy and utterance accuracy in unfolded and folded conditions of DNN and RNN. "),n("br"),e._v("The results indicate that the node states of hidden layer can better characterize the temporal information of audio than the statistics."),n("br"),e._v("In addition, similar to Fit-DNN, the folded RNN has the advantage of local connection between virtual nodes. Both bin "),n("strong",[e._v("accuracy")]),e._v("[ˈækjʊrəsi] and "),n("strong",[e._v("utterance")]),e._v("['ʌt(ə)rəns] accuracy are improved over RNN.")])]),e._v(" "),n("tr",[n("td",[e._v("18")]),e._v(" "),n("td",[e._v("Now, let's do a brief summary, and the specific numeric values can be found in the paper. "),n("br"),e._v("We applied Fit-DNN to closed-set text-independent speaker recognition. An equivalent DNN network was implemented with one nonlinear neuron and several delay loops. A slight change was made to extend the folding approach to RNNs. The main conclusions are as follows:"),n("br"),e._v("The local connection between adjacent nodes in Fit-DNN increases the complexity of network topology. "),n("br"),e._v("There is no clear relationship between the recognition accuracy and the number of delay loops in Fit-DNN. Sparse connection is promoted."),n("br"),e._v("The recognition results based on Folded-in-time DNN are consistent with the expected result for speaker recognition task."),n("br"),e._v("For audio with temporal information, the folded-in-time recurrent neural network outperforms Fit-DNN. Similar to Fit-DNN, local connections exist between neighboring virtual nodes. So, it also outperforms traditional RNNs.")])]),e._v(" "),n("tr",[n("td",[e._v("19")]),e._v(" "),n("td",[e._v("I hope that was clear."),n("br"),e._v("Now, let's welcome Doctor Wang Xiaofei to give her presentation."),n("br"),e._v("Due to time limit, the section of question end.")])])])]),e._v(" "),n("p",[e._v("问题准备")]),e._v(" "),n("p",[e._v("Q1: In page 12, how the continuous audio signal is converted into discrete feature MFCC?")]),e._v(" "),n("p",[e._v("A1: Since the audio signal is a quasi-steady state signal, the signal is often divided into frames during processing, with each frame being about 20ms-30ms in length, and the voice signal is considered as a steady state signal during this interval. Only the steady-state information can be processed by signal processing, so it should be framed first. And then it is passed to a set of filter that approximate the response of the human ear.")]),e._v(" "),n("p",[e._v("Q2: Can the folded-in-time concept extend to convolutional neural networks or some other classic type?")]),e._v(" "),n("p",[e._v("A2: Unlikely at this time. Only use one neuron and some delay loops cannot realize the pooling layer in convolutional neural networks. May need to convert optical signal to electrical signal, do some processing and then convert to optical signal. I’m not very sure. Actually, DNN, CNN, and RNN can be used as components of complex network architectures. We can use a neuron and delay loops as a component and join them together, like Lego. But how the signal is passed between them has not been thought. Maybe further work can be done later.")]),e._v(" "),n("p",[e._v("Q3: Has the idea of folded-in-time RNN been compared with dynamic reservoir computing? Or can it be a bi-directional RNN?")]),e._v(" "),n("p",[e._v("A3: About the first question, we have done comparisons on a small scale, 50 speakers in TIMIT. But haven't had time to summarize this part of the work. It’s better than dynamic reservoir computing, since the input and hidden weights in dynamic reservoir computing are fixed. But we don’t know how it will behave at large scale. We will continue afterwards. The second question, how to implement a bi-directional RNN. Emmmm, we have not implemented it yet, but it is theoretically possible. Maybe two neurons are needed. Maybe change the connection of the delay loops. Sorry, I can't answer definitively yet.")]),e._v(" "),n("p",[e._v("Q4: In page 8, why the non-zero values of weight matrix are in the diagonal direction? Can dynamic sparsity be used in your work?")]),e._v(" "),n("p",[e._v("A4: The location of non-zero elements are determined by the delay loops. …[自由发挥吧]")]),e._v(" "),n("p",[e._v("Q5: In page 14, why use gaussian sampling to select the length of delay loops?")]),e._v(" "),n("p",[e._v("A5: The author of Fit-DNN has compared two methods for choosing the delays, gaussian sampling and equal interval sampling. It shows that, the influence of the chosen method on the quality of the results is small and seems to be insignificant.")])])}),[],!1,null,null,null);t.default=i.exports}}]);